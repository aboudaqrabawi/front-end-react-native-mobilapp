{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aqrab\\\\OneDrive\\\\Desktop\\\\thesis project phase 2\\\\front-end-react-native-mobilapp\\\\components\\\\map.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { Descriptions } from 'antd';\nimport GoogleMapReact from 'google-map-react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar _require = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),\n    MarkerWithLabel = _require.MarkerWithLabel;\n\nGeocode.setApiKey(\"AIzaSyDhdSw1QzkXBrYnLSt3EF3izfHEhUj6LMc\");\nGeocode.enableDebug();\n\nvar LocationSearchModal = function (_Component) {\n  _inherits(LocationSearchModal, _Component);\n\n  var _super = _createSuper(LocationSearchModal);\n\n  function LocationSearchModal(_props) {\n    var _this;\n\n    _classCallCheck(this, LocationSearchModal);\n\n    _this = _super.call(this, _props);\n\n    _this.getCity = function (addressArray) {\n      var city = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n          city = addressArray[i].long_name;\n          return city;\n        }\n      }\n    };\n\n    _this.getArea = function (addressArray) {\n      var area = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (var j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              area = addressArray[i].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    _this.getState = function (addressArray) {\n      var state = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        for (var _i = 0; _i < addressArray.length; _i++) {\n          if (addressArray[_i].types[0] && 'administrative_area_level_1' === addressArray[_i].types[0]) {\n            state = addressArray[_i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(props);\n    };\n\n    _this.onInfoWindowClose = function (event) {};\n\n    _this.onMarkerDragEnd = function (event) {\n      var newLat = event.latLng.lat(),\n          newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(function (response) {\n        var address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = _this.getCity(addressArray),\n            area = _this.getArea(addressArray),\n            state = _this.getState(addressArray);\n\n        _this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.onPlaceSelected = function (place) {\n      console.log('plc', place);\n\n      var address = place.formatted_address,\n          addressArray = place.address_components,\n          city = _this.getCity(addressArray),\n          area = _this.getArea(addressArray),\n          state = _this.getState(addressArray),\n          latValue = place.geometry.location.lat(),\n          lngValue = place.geometry.location.lng();\n\n      console.log('latValue' + latValue);\n      console.log('latvalue', latValue);\n      console.log('lngValue', lngValue);\n\n      _this.setState({\n        address: address ? address : '',\n        area: area ? area : '',\n        city: city ? city : '',\n        state: state ? state : '',\n        markerPosition: {\n          lat: latValue,\n          lng: lngValue\n        },\n        mapPosition: {\n          lat: latValue,\n          lng: lngValue\n        }\n      });\n    };\n\n    _this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      link: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LocationSearchModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          _this2.setState({\n            mapPosition: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            },\n            markerPosition: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }, function () {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(function (response) {\n              _this2.setState({\n                link: \"https://www.latlong.net/c/?lat=\" + position.coords.latitude + \"&long=\" + position.coords.longitude\n              });\n\n              var address = response.results[0].formatted_address,\n                  addressArray = response.results[0].address_components,\n                  city = _this2.getCity(addressArray),\n                  area = _this2.getArea(addressArray),\n                  state = _this2.getState(addressArray);\n\n              console.log('city', city, area, state);\n\n              _this2.setState({\n                address: address ? address : '',\n                area: area ? area : '',\n                city: city ? city : '',\n                state: state ? state : ''\n              });\n            }, function (error) {\n              console.error(error);\n            });\n          });\n        });\n      } else {\n        console.error(\"Geolocation is not supported by this browser!\");\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var location, trial;\n      return _regeneratorRuntime.async(function handleSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('sfsd');\n              location = this.state.link;\n              console.log(location);\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('location', location));\n\n            case 6:\n              console.log('saved', location);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 12:\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('location'));\n\n            case 14:\n              trial = _context.sent;\n              console.log(trial);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[3, 9]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n        return React.createElement(GoogleMap, {\n          defaultZoom: _this3.state.zoom,\n          defaultCenter: {\n            lat: _this3.state.mapPosition.lat,\n            lng: _this3.state.mapPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }\n        }, React.createElement(Marker, {\n          google: _this3.props.google,\n          name: 'Dolores park',\n          draggable: true,\n          onDragEnd: _this3.onMarkerDragEnd,\n          position: {\n            lat: _this3.state.markerPosition.lat,\n            lng: _this3.state.markerPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }), React.createElement(InfoWindow, {\n          onClose: _this3.onInfoWindowClose,\n          position: {\n            lat: _this3.state.markerPosition.lat + 0.0018,\n            lng: _this3.state.markerPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 32\n          }\n        }, _this3.state.address))), React.createElement(Marker, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }), React.createElement(Autocomplete, {\n          style: {\n            width: '100%',\n            height: '40px',\n            paddingLeft: '16px',\n            marginTop: '2px',\n            marginBottom: '2rem'\n          },\n          onPlaceSelected: _this3.onPlaceSelected,\n          types: ['(regions)'],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }\n        }));\n      }));\n      return React.createElement(View, {\n        style: {\n          padding: '1rem',\n          margin: '0 auto',\n          maxWidth: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, \"Google Map\"), React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, \"Find your location ..\"), React.createElement(Descriptions, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, React.createElement(Descriptions.Item, {\n        label: \"City\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, this.state.city), React.createElement(Descriptions.Item, {\n        label: \"Area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }, this.state.area), React.createElement(Descriptions.Item, {\n        label: \"State\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, this.state.state), React.createElement(Descriptions.Item, {\n        label: \"Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, this.state.address)), React.createElement(Button, {\n        type: \"submit\",\n        onPress: this.handleSubmit.bind(this),\n        title: \"Save location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }), React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDhdSw1QzkXBrYnLSt3EF3izfHEhUj6LMc&libraries=places\",\n        loadingElement: React.createElement(View, {\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }\n        }),\n        containerElement: React.createElement(View, {\n          style: {\n            height: this.state.height\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }),\n        mapElement: React.createElement(View, {\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 18\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 18\n        }\n      }));\n    }\n  }]);\n\n  return LocationSearchModal;\n}(Component);\n\nexport default LocationSearchModal;","map":{"version":3,"sources":["C:/Users/aqrab/OneDrive/Desktop/thesis project phase 2/front-end-react-native-mobilapp/components/map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","Descriptions","GoogleMapReact","axios","AsyncStorage","require","MarkerWithLabel","setApiKey","enableDebug","LocationSearchModal","props","getCity","addressArray","city","i","length","types","long_name","getArea","area","j","getState","state","onChange","event","setState","target","name","value","console","log","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","fromLatLng","then","response","address","results","formatted_address","address_components","markerPosition","mapPosition","error","onPlaceSelected","place","latValue","geometry","location","lngValue","link","zoom","height","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setItem","getItem","trial","AsyncMap","google","padding","margin","width","paddingLeft","marginTop","marginBottom","maxWidth","handleSubmit","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport {  Descriptions } from 'antd';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Button, Text,  View,} from 'react-native';\r\nimport axios from \"axios\";\r\nimport  AsyncStorage  from '@react-native-community/async-storage';\r\n// import Button from 'react-bootstrap/Button';\r\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\nGeocode.setApiKey(\"AIzaSyDhdSw1QzkXBrYnLSt3EF3izfHEhUj6LMc\");\r\nGeocode.enableDebug();\r\nclass LocationSearchModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\nthis.state = {\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        link:'',\r\n        zoom: 15,\r\n        height: 400,\r\n        mapPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        },\r\n        markerPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        }\r\n    } }\r\n \r\n    componentDidMount() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({\r\n                    mapPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    },\r\n                    markerPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    }\r\n                },\r\n                    () => {\r\n                        Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\r\n                            response => {\r\n                                // console.log(`https://www.latlong.net/c/?lat=${position.coords.latitude}&long=${position.coords.longitude}`)\r\n                                this.setState({link:`https://www.latlong.net/c/?lat=${position.coords.latitude}&long=${position.coords.longitude}`})\r\n                                const address = response.results[0].formatted_address,\r\n                                    addressArray = response.results[0].address_components,\r\n                                    city = this.getCity(addressArray),\r\n                                    area = this.getArea(addressArray),\r\n                                    state = this.getState(addressArray);\r\n                                console.log('city', city, area, state);\r\n                                this.setState({\r\n                                    address: (address) ? address : '',\r\n                                    area: (area) ? area : '',\r\n                                    city: (city) ? city : '',\r\n                                    state: (state) ? state : '',\r\n                                })\r\n                            },\r\n                            error => {\r\n                                console.error(error);\r\n                            }\r\n                        );\r\n                    })\r\n            });\r\n        } else {\r\n            console.error(\"Geolocation is not supported by this browser!\");\r\n        }\r\n    };\r\n  \r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n                city = addressArray[i].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    };\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0]) {\r\n                for (let j = 0; j < addressArray[i].types.length; j++) {\r\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                        area = addressArray[i].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            for (let i = 0; i < addressArray.length; i++) {\r\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                    state = addressArray[i].long_name;\r\n                    return state;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n        // console.log(event.target.value)\r\n        console.log(props)\r\n    };\r\n  \r\n    onInfoWindowClose = (event) => { };\r\n    onMarkerDragEnd = (event) => {\r\n        let newLat = event.latLng.lat(),\r\n            newLng = event.latLng.lng();\r\n        Geocode.fromLatLng(newLat, newLng).then(\r\n            response => {\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray);\r\n                this.setState({\r\n                    address: (address) ? address : '',\r\n                    area: (area) ? area : '',\r\n                    city: (city) ? city : '',\r\n                    state: (state) ? state : '',\r\n                    markerPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                    mapPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                })\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    };\r\n    onPlaceSelected = (place) => {\r\n        console.log('plc', place);\r\n        const address = place.formatted_address,\r\n            addressArray = place.address_components,\r\n            city = this.getCity(addressArray),\r\n            area = this.getArea(addressArray),\r\n            state = this.getState(addressArray),\r\n            latValue = place.geometry.location.lat(),\r\n            lngValue = place.geometry.location.lng();\r\n            console.log('latValue'+latValue)\r\n        console.log('latvalue', latValue)\r\n        console.log('lngValue', lngValue)\r\n        // Set these values in the state.\r\n        this.setState({\r\n            address: (address) ? address : '',\r\n            area: (area) ? area : '',\r\n            city: (city) ? city : '',\r\n            state: (state) ? state : '',\r\n            markerPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n            mapPosition: {\r\n                lat: latValue,\r\n                lng: lngValue\r\n            },\r\n        })\r\n    };\r\n    async handleSubmit () { \r\n        console.log('sfsd')\r\n      var location = this.state.link;\r\n      console.log(location)\r\n     \r\n      try {\r\n        //to save token of logged in user in the storage\r\n     await AsyncStorage.setItem('location',location) \r\n    \r\n     console.log('saved', location)\r\n     }\r\n    catch (e){\r\n    console.log(e)\r\n    }\r\n        //to get token of logged in user in the storage\r\n    const trial = await AsyncStorage.getItem('location')\r\n    console.log(trial)\r\n   \r\n       \r\n    }\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        defaultZoom={this.state.zoom}\r\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        {/* InfoWindow on top of marker */}\r\n                        {/*Marker*/}\r\n                        <Marker\r\n                            google={this.props.google}\r\n                            name={'Dolores park'}\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n                        />\r\n                        <InfoWindow\r\n                            onClose={this.onInfoWindowClose}\r\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\r\n                        >\r\n                            <View>\r\n                               <Text style={{ padding: 0, margin: 0 }}>{this.state.address}</Text>\r\n                                </View>\r\n                        </InfoWindow>\r\n                        <Marker />\r\n                        {/* <MarkerWithLabel\r\n                            position={{ lat: -34.397, lng: 150.644 }}\r\n                            labelAnchor={new google.maps.Point(0, 0)}\r\n                            labelStyle={{ backgroundColor: \"yellow\", fontSize: \"32px\", padding: \"16px\" }}\r\n                        >\r\n                            <div>Hello There!</div>\r\n                        </MarkerWithLabel> */}\r\n                        {/* For Auto complete Search Box */}\r\n                        <Autocomplete\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '40px',\r\n                                paddingLeft: '16px',\r\n                                marginTop: '2px',\r\n                                marginBottom: '2rem'\r\n                            }}\r\n                            onPlaceSelected={this.onPlaceSelected}\r\n                            types={['(regions)']}\r\n                        />\r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        return (\r\n            <View style={{ padding: '1rem', margin: '0 auto', maxWidth: 1000 }}>\r\n                <h2>Google Map</h2>\r\n                <h3>Find your location ..</h3>\r\n                <Descriptions bordered>\r\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\r\n                </Descriptions>\r\n                <Button  type=\"submit\"  onPress={this.handleSubmit.bind(this)}   title=\"Save location\" />\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDhdSw1QzkXBrYnLSt3EF3izfHEhUj6LMc&libraries=places\"\r\n                    loadingElement={\r\n                        <View style={{ height: `100%` ,width: `100%`}} />\r\n                    }\r\n                    containerElement={\r\n                        <View style={{ height: this.state.height }} />\r\n                    }\r\n                    mapElement={\r\n                        <View style={{ height: `100%`,width: `100%` }} />\r\n                    }\r\n                />\r\n                 <br/>\r\n                 <br/>\r\n            \r\n            </View>\r\n        )\r\n    }\r\n}\r\nexport default LocationSearchModal;"]},"metadata":{},"sourceType":"module"}